name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        {{ LANGUAGE_VERSION }}: [{{ VERSION_1 }}, {{ VERSION_2 }}, {{ VERSION_3 }}]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up {{ LANGUAGE }}
      uses: {{ SETUP_ACTION }}
      with:
        {{ LANGUAGE_VERSION }}: ${{ matrix.{{ LANGUAGE_VERSION }} }}
    
    - name: Install dependencies
      run: |
        {{ DEPENDENCY_INSTALL_COMMAND }}
    
    - name: Lint code
      run: |
        {{ LINT_COMMAND }}
    
    - name: Run tests
      run: |
        {{ TEST_COMMAND }}
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./{{ COVERAGE_FILE }}
        flags: unittests
        name: codecov-umbrella

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/afrigen-d/{{ REPO_NAME }}:latest
          ghcr.io/afrigen-d/{{ REPO_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    runs-on: ubuntu-latest
    needs: [test, docker]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[release]')
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up {{ LANGUAGE }}
      uses: {{ SETUP_ACTION }}
      with:
        {{ LANGUAGE_VERSION }}: {{ RELEASE_VERSION }}
    
    - name: Build package
      run: |
        {{ BUILD_COMMAND }}
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Release v${{ steps.version.outputs.version }}
        body_path: CHANGELOG.md
        files: |
          {{ RELEASE_ARTIFACTS }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}